{"version":3,"sources":["Todo.js","NewTodoItem.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","state","isEditing","task","handleRemove","bind","handleEdit","handleUpdate","handleChange","handleToggle","evt","this","removeTodo","id","setState","preventDefault","updateTodo","target","name","value","toggleTodo","className","onSubmit","type","onChange","completed","onClick","Component","NewTodoItem","handleSubmit","addItem","uuid","htmlFor","TodoList","TodoItems","addTodo","remove","update","toggleCompletion","newTodo","filter","t","updatedTask","updatedTodos","map","todo","todos","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73bf35e9.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './Todo.css'\r\n\r\nclass Todo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isEditing: false,\r\n            task: this.props.task\r\n        }\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleToggle = this.handleToggle.bind(this);\r\n    }\r\n\r\n    handleRemove(evt){\r\n        this.props.removeTodo(this.props.id);\r\n    }\r\n\r\n    handleEdit(evt){\r\n        this.setState({\r\n            isEditing: !this.state.isEditing\r\n        })\r\n    }\r\n\r\n    handleUpdate(evt){\r\n        evt.preventDefault();\r\n        this.props.updateTodo(this.props.id, this.state.task)\r\n        this.setState({\r\n            isEditing: false\r\n        })\r\n    }\r\n\r\n    handleChange(evt){\r\n        this.setState({\r\n            [evt.target.name]: evt.target.value\r\n        })\r\n    }\r\n\r\n    handleToggle(evt){\r\n        this.props.toggleTodo(this.props.id);\r\n    }\r\n\r\n    render() {\r\n        let result;\r\n        if(this.state.isEditing){\r\n            result = (\r\n                <div className=\"Todo\">\r\n                    <form className=\"Todo-edit-form\" onSubmit={this.handleUpdate}>\r\n                        <input type=\"text\" value={this.state.task} name=\"task\" onChange={this.handleChange}/>\r\n                        <button>Save</button>\r\n                    </form>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            result = (\r\n                <div className=\"Todo\">\r\n                    <li className={this.props.completed ? \"Todo-task completed\": \"Todo-task\"} onClick={this.handleToggle}>{this.props.task}</li>\r\n                    <div className=\"Todo-buttons\">\r\n                        <button onClick={this.handleEdit}><i className='fa fa-pencil' /></button>\r\n                        <button onClick={this.handleRemove}><i className='fa fa-trash' /></button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return result;\r\n        \r\n    }\r\n}\r\n\r\nexport default Todo;","import React, {Component} from 'react';\r\nimport {v4 as uuid} from \"uuid\"; \r\nimport './NewTodoItem.css';\r\n\r\nclass NewTodoItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { task: \"\" };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(evt){\r\n        this.setState({\r\n            [evt.target.name]: evt.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(evt){\r\n        evt.preventDefault();\r\n        this.props.addItem({...this.state, id: uuid(), completed: false });\r\n        this.setState( {task: \"\"} )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <form className=\"NewTodoForm\" onSubmit={this.handleSubmit}>\r\n                <label htmlFor='task'> Todo Item </label>\r\n                <input \r\n                        type=\"text\" \r\n                        name=\"task\" \r\n                        id='task'\r\n                        value={this.state.task}\r\n                        onChange={this.handleChange}\r\n                        />\r\n                <button value=\"New Todo\">Add Todo</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewTodoItem;","import React, {Component} from 'react'\r\nimport Todo from './Todo'\r\nimport './TodoList.css'\r\nimport NewTodoItem from './NewTodoItem'\r\n\r\nclass TodoList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {TodoItems: []}\r\n        this.addTodo = this.addTodo.bind(this);\r\n        this.remove = this.remove.bind(this);\r\n        this.update = this.update.bind(this);\r\n        this.toggleCompletion = this.toggleCompletion.bind(this);\r\n    }\r\n\r\n    addTodo(newTodo) {\r\n        this.setState({\r\n            TodoItems: [...this.state.TodoItems, newTodo]\r\n        })\r\n    }\r\n\r\n    remove(id){\r\n        this.setState({\r\n            TodoItems: this.state.TodoItems.filter(t => t.id !== id)\r\n        })\r\n    }\r\n\r\n    update(id, updatedTask){\r\n        const updatedTodos = this.state.TodoItems.map(todo => {\r\n            if(todo.id === id) {\r\n                return {...todo, task: updatedTask};\r\n            }\r\n            return todo;\r\n        });\r\n        this.setState({ TodoItems: updatedTodos })\r\n    }\r\n\r\n    toggleCompletion(id){\r\n        const updatedTodos = this.state.TodoItems.map(todo => {\r\n            if(todo.id === id){\r\n                return {...todo, completed: !todo.completed}\r\n            }\r\n            return todo;\r\n        })\r\n        this.setState({ TodoItems: updatedTodos })\r\n    }\r\n\r\n    render() {\r\n        let todos = this.state.TodoItems.map(todo => {\r\n            return (\r\n            <Todo \r\n                key={todo.id} \r\n                id={todo.id} \r\n                task={todo.task} \r\n                removeTodo={this.remove} \r\n                updateTodo={this.update}\r\n                completed={todo.completed}\r\n                toggleTodo={this.toggleCompletion}\r\n            />\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"TodoList\">\r\n                <h1>Todo List! <span>A Simple React Todo List App.</span></h1>\r\n                <ul className=\"singleTodo\">{todos}</ul>\r\n                <NewTodoItem addItem={this.addTodo}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList;","import TodoList from './TodoList'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}